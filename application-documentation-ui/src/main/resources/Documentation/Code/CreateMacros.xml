<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Documentation.Code.CreateMacros" locale="">
  <web>Documentation.Code</web>
  <name>CreateMacros</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>Create Macros</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}

#template('locationPicker_macros.vm')

#**
 * This is a clone of the #documentPickerModal macro.
 * It is used in order to replace the standard tree with a custom document tree.
 *#
#macro (documentPickerModalCustom $options)
  &lt;div class="modal fade" tabindex="-1" role="dialog" data-backdrop="static"&gt;
    &lt;div class="modal-dialog" role="document"&gt;
      &lt;div class="modal-content"&gt;
        &lt;div class="modal-header"&gt;
          &lt;button type="button" class="close" data-dismiss="modal" aria-label="Close"&gt;
            &lt;span aria-hidden="true"&gt;&amp;times;&lt;/span&gt;
          &lt;/button&gt;
          &lt;h4 class="modal-title"&gt;$services.localization.render('core.documentPicker.title')&lt;/h4&gt;
        &lt;/div&gt;
        &lt;div class="modal-body"&gt;
          (% class="location-picker-documentation" %)((({{tree reference="Documentation.Code.DocumentationTreeSource" root="document:Documentation.WebHome" openTo="document:${services.model.serialize($options.parent.reference)}" showRoot="true" /}})))
        &lt;/div&gt;
        &lt;div class="modal-footer"&gt;
          &lt;button type="button" class="btn btn-default" data-dismiss="modal"&gt;
            $services.localization.render('core.documentPicker.cancel')
          &lt;/button&gt;
          &lt;button type="button" class="btn btn-primary" disabled="disabled"&gt;
            $services.localization.render('core.documentPicker.select')
          &lt;/button&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
#end

#**
 * This is a clone of the #locationPicker macro.
 * It is used in order to build a custom modal, containing a custom document tree.
 *#
#macro (locationPickerCustom $options)
  #set ($discard = $xwiki.get('jsfx').use('uicomponents/widgets/validation/livevalidation_prototype.js'))
  #set ($discard = $xwiki.get('ssfx').use('uicomponents/widgets/validation/livevalidation.css', true))
  #set ($discard = $xwiki.get('jsfx').use('uicomponents/widgets/locationPicker.js', true))
  #set ($discard = $xwiki.get('ssfx').use('uicomponents/widgets/locationPicker.css', true))
  &lt;dl class="location-picker"&gt;
    ##
    ## ---------------------------------------------------------------------------------------------------------
    ## Title field
    ## ---------------------------------------------------------------------------------------------------------
    ##
    #set ($titleField = $options.title)
    #set ($value = $request.getParameter($titleField.name))
    #if (!$value)
      #set ($value = $titleField.value)
    #end
    #set ($escapedValue = $escapetool.xml($value))
    #if ($titleField.label)
      &lt;dt&gt;
        &lt;label for="$!{options.id}Title"&gt;$services.localization.render($titleField.label)&lt;/label&gt;
        &lt;span class="xHint"&gt;$!services.localization.render($titleField.hint)&lt;/span&gt;
      &lt;/dt&gt;
      &lt;dd&gt;
        &lt;input type="text" id="$!{options.id}Title" name="$titleField.name" value="$!escapedValue"
          class="location-title-field" placeholder="$!services.localization.render($titleField.placeholder)" /&gt;
      &lt;/dd&gt;
    #elseif ($titleField)
      &lt;dt class="hidden"&gt;&lt;/dt&gt;
      &lt;dd class="hidden"&gt;
        &lt;input type="hidden" name="$titleField.name" value="$!escapedValue"
          class="location-title-field" /&gt;
      &lt;/dd&gt;
    #end
    ##
    ## ---------------------------------------------------------------------------------------------------------
    ## Location preview
    ## ---------------------------------------------------------------------------------------------------------
    ##
    &lt;dt&gt;
      &lt;label&gt;$services.localization.render($options.preview.label)&lt;/label&gt;
      &lt;span class="xHint"&gt;$services.localization.render($options.preview.hint)&lt;/span&gt;
    &lt;/dt&gt;
    &lt;dd&gt;
      #if ($isDocumentTreeAvailable)
        ## Start of customization as part of the Documentation application : building a custom picker modal, containing a custom tree
        #documentPickerModalCustom($options)
        ## End of customization as part of the Documentation application
        #locationPickerActions
      #end
      ## The breadcrumb is updated whenever the user changes the parent page. This causes the breadcrumb element to be
      ## constantly replaced, preventing us from displaying the live validation message after it. In order to overcome
      ## this, we wrap the breadcrumb element in a DIV that remains the same.
      &lt;div class="breadcrumb-container"&gt;
        ## Note: We display only the parent reference here. The new document part will be added from JavaScript.
        #hierarchy($options.parent.reference)
      &lt;/div&gt;
      ##
      ## ---------------------------------------------------------------------------------------------------------
      ## Location advanced edit
      ## ---------------------------------------------------------------------------------------------------------
      ##
      #locationAdvancedEdit($options)
    &lt;/dd&gt;
  &lt;/dl&gt;
#end
{{/velocity}}</content>
</xwikidoc>
