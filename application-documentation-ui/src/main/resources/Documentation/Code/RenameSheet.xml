<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Documentation.Code.RenameSheet" locale="">
  <web>Documentation.Code</web>
  <name>RenameSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Documentation.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="Documentation.Code.CreateMacros" /}}

{{velocity}}
= $services.localization.render('section.rename.sheet.title', [$escapetool.xml($doc.displayTitle), $doc.fullName]) =
#if (!$xwiki.checkAccess($doc.fullName, 'delete') &amp;&amp; "$!request.renameId" == '')
  #template("accessdenied.vm")
#elseif ($xcontext.action == 'get' &amp;&amp; "$!request.renameId" != '')
  ## AJAX request for rename status update.
  #template("renameStatus.vm")
#else
  #set ($newParentSpace = "$!request.getParameter('newSpaceName')")
  #set ($numbering = "$!request.numbering")
  ##
  ## Calling the dedicated skin extension in order to handle the special behavior of the form elements (parent &amp; siblings selection)
  #set ($discard = $xwiki.jsx.use('Documentation.Code.CreateSheet'))
  ## Custom styles used for hiding elements on the page
  #set ($discard = $xwiki.ssx.use('Documentation.Code.CreateSheet'))
  ##
  ## Hide docextra
  #set($displayDocExtra = false)
  #if($request.step == '2')
      ## Do the rename. It's the form in renameStep1.vm page that calls this page with step=2.
      #if ("$!request.newPageName.trim()" == '')
        $response.setStatus(400)

        {{html}}
          #error($services.localization.render('core.rename.emptyName'))
        {{/html}}

        {{include reference="Documentation.Code.RenameForm" /}}
      #else

        {{html}}
          #template('refactoring_macros.vm')
        {{/html}}

        ## Force the new doc to be non-terminal
        #set($terminal = false)
        #getNestedDocumentReference($request.newWikiName $request.newSpaceName $request.newPageName $NULL false
          $newDocReference)
        #set ($newDocReferenceAsString = $services.model.serialize($newDocReference))
        ## Allow users to overwrite existing documents if they are redirect placeholders.
        ##
        #set($parentReferenceSerialized = $services.model.serialize($doc.parentReference, 'local'))
        #set($changeNumberingAndKeepParent = "$!numbering" != '' &amp;&amp; $newParentSpace &amp;&amp; $newParentSpace == $parentReferenceSerialized)
        #if($changeNumberingAndKeepParent)
          ## In case the parent is the same and only the numbering changes, set the new numbering, then call the documentation service to :
          ## - Recompute the numberings
          ## - Set the previous and next sections
          #set($sectionObj = $doc.getObject('Documentation.Code.SectionClass'))
          #if($sectionObj &amp;&amp; $xwiki.checkAccess($doc.fullName, 'edit'))
            ## Update the numbering for the current section
            #set($newSectionNumber = $numbering)
            $sectionObj.set('numbering', $numbering)
            $doc.save( $services.localization.render('section.rename.sheet.numberupdate'), true)
            ## Recompute the numberings
            $services.documentation.numberingManager.recomputeNumberingsFromSection($doc.documentReference)
            ## Compute the previous and next sections
            $services.documentation.orderingManager.computePreviousAndNextSections($doc.documentReference)
            $response.sendRedirect($doc.getURL())
          #else
            {{error}}$services.localization.render('section.rename.sheet.error'){{/error}}
          #end
        #elseif ($xwiki.exists($newDocReference) &amp;&amp; !$xwiki.getDocument($newDocReference).getObject('XWiki.RedirectClass'))
          $response.setStatus(409)

          {{html}}
            #error($services.localization.render('core.rename.alreadyExists', [${escapetool.xml($newDocReferenceAsString)},
            $xwiki.getURL($newDocReference)]))
          {{/html}}

          {{include reference="Documentation.Code.RenameForm" /}}
        #elseif (!$xwiki.hasAccessLevel('edit', $xcontext.user, $newDocReferenceAsString))
          $response.setStatus(403)

          {{html}}
          #error($services.localization.render('core.rename.targetNotWritable',
            [${escapetool.xml($newDocReferenceAsString)}]))
          {{/html}}

          {{include reference="Documentation.Code.RenameForm" /}}
        #else
          ## Before renaming, set the new section number
          #set($sectionObj = $doc.getObject('Documentation.Code.SectionClass'))
          #if($sectionObj)
            ## Update the numbering for the renamed section
            #set($newSectionNumber = $numbering)
            $sectionObj.set('numbering', $numbering)
            $doc.save( $services.localization.render('section.rename.sheet.metadataupdate'), true)
          #end
          #set ($renameRequest = $services.refactoring.createRenameRequest($doc.documentReference, $newDocReference))
          ## We can't rename the children if the new page is terminal.
          #set ($deep = $request.deep == 'true' &amp;&amp; !$terminal)
          #set ($discard = $renameRequest.setDeep($deep))
          #set ($updateLinks = $request.updateLinks == 'true')
          #set ($discard = $renameRequest.setUpdateLinks($updateLinks))
          #set ($autoRedirect = $request.autoRedirect == 'true')
          #set ($discard = $renameRequest.setAutoRedirect($autoRedirect))
          ## Rename operation relies on copy.
          #maybeUpdateTitleAfterCopy($renameRequest $doc.documentReference 'newPageTitle')
          #if ($request.async == 'true')
            ## We may be asked a question (we assume that async also imply we want it interactive)
            #set ($discard = $renameRequest.setInteractive(true))
          #end
          #set ($renameJob = $services.refactoring.rename($renameRequest))
          #if ($request.async != 'true')
            #try()
              #set ($discard = $renameJob.join())
            #end
          #end
          $response.sendRedirect($doc.getURL($xcontext.action, $escapetool.url({
            'xpage': 'rename',
            'renameId': $renameRequest.id.get($mathtool.sub($renameRequest.id.size(), 1))
          })))
        #end
      #end
  #else
    {{include reference="Documentation.Code.RenameForm" /}}
  #end
#end
{{/velocity}}</content>
</xwikidoc>
