<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Documentation.Code.DocumentationTreeSource" locale="">
  <web>Documentation.Code</web>
  <name>DocumentationTreeSource</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Main.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>DocumentationTreeSource</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="XWiki.DocumentTreeMacros" /}}

{{velocity output="false"}}
## We include DocumentTreeMacros in order to have the same functions as a DocumentTree, however we override the #addChildNodes method in order to only get child nodes having a SectionClass and order them by numbering.
#macro (addChildNodes $nodeId $offset $limit $children)
  ## Avoid pages with only one node when paginating the child nodes.
  #set ($actualLimit = $limit + 1)

  ## ********** Start of customization **********
  #set ($parts = $nodeId.split(':', 3))
  ## Constraint the root of the tree to a document in the current wiki
  #if ($parts &amp;&amp; $parts.size() == 3 &amp;&amp; $parts[0] == 'document' &amp;&amp; $parts[1] == $services.wiki.currentWikiId)
    #set($results = $services.query.hql("select distinct obj.name from BaseObject obj, StringProperty parent, LongProperty numbering where obj.className = 'Documentation.Code.SectionClass' and obj.id = parent.id.id and obj.id = numbering.id.id and numbering.id.name = 'numbering' and parent.id.name = 'parentSection' and parent.value = :parentValue order by numbering.value asc").bindValue('parentValue', $parts[2]).execute())
    #set($childNodeIds = [])
    #foreach ($result in $results)
      #set($discard = $childNodeIds.add("document:$result"))
    #end
  ## ********** End of customization **********

    #set ($hasMoreChildNodes = false)
    #if ($childNodeIds.size() &gt;= $actualLimit)
      #set ($totalCount = $tree.getChildCount($nodeId))
      #set ($newOffset = $offset + $actualLimit)
      #if ($newOffset &lt; $totalCount)
        ## There are at least 2 more child nodes.
        #set ($hasMoreChildNodes = true)
        #set ($newOffset = $newOffset - 1)
        #set ($childNodeIds = $childNodeIds.subList(0, $limit))
      #end
    #end
    #foreach ($childNodeId in $childNodeIds)
      #maybeAddNode($childNodeId $children)
    #end
    #if ($hasMoreChildNodes)
      #addPaginationNode($nodeId $newOffset $totalCount $children)
    #end
  ## ********** Start of customization **********
  #end
  ## ********** End of customization **********
#end
{{/velocity}}

{{velocity wiki="false"}}
#if ($xcontext.action == 'get')
  #updateDocTreeConfigFromRequest
  #handleDocumentTreeRequest
#end
{{/velocity}}</content>
</xwikidoc>
