<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="Documentation.Code.SectionContentDisplayer" locale="">
  <web>Documentation.Code</web>
  <name>SectionContentDisplayer</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
## Taken from AWM
#if ($type == 'edit')
  #set ($className = $object.getxWikiClass().name)
  ## We are editing an application entry so the content must be read from / written to the current document.
  #set ($name = 'content')
  #set ($editedDocument = $tdoc)
  ## Use the preferred content editor.
  #set ($useWysiwygEditor = $xwiki.getUserPreference('editor') == 'Wysiwyg')
  {{html clean="false"}}
  ## The "content" id is expected by some JavaScript and CSS code.
  #set ($id = 'content')
  #if (!$useWysiwygEditor)
    &lt;div id="xwikieditcontentinner"&gt;
      ## The tool bar may have an entry to insert an HTML macro. Make sure it doesn't break the HTML macro we are currently in.
      #set ($toolBar = "#template('simpleedittoolbar.vm')")
      $!toolBar.replace('{{', '&amp;#123;&amp;#123;')
      ## Display a simple textarea.
      &lt;textarea id="$id" cols="80" rows="25" name="$name"&gt;$escapetool.xml($editedDocument.content)&lt;/textarea&gt;
  #end
  #if ($useWysiwygEditor)
    $!services.edit.syntaxContent.wysiwyg($editedDocument.content, $editedDocument.syntax, {
      'id': "$id",
      'name': "$name",
      'rows': 25,
      'cols': 80,
      'full': true
    })
  #else
    &lt;/div&gt;
  #end
  {{/html}}
#elseif ("$!type" != '')
  ## Include the content of the current document.
  ## Escape {{ in the rendered content to be sure that the HTML macro is not closed unintentionally.
  {{html}}$tdoc.getRenderedContent($tdoc.content, $tdoc.syntax.toIdString()).replace('{{', '&amp;amp;#123;&amp;amp;#123;'){{/html}}
#else
  The display mode is not specified!
#end
{{/velocity}}</content>
</xwikidoc>
